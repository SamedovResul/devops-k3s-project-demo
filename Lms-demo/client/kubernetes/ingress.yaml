apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: entesk-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Force HTTP â†’ HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"

    # Body size
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"

    # Keep your WebSocket alive
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    # Use HTTP/1.1 upstream so the Upgrade header is honored
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - test.edinify.com
      secretName: entesk-tls
  rules:
  - host: entesk.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-svc
            port:
              number: 80

      - path: /socket.io
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-svc
            port:
              number: 80

      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-svc
            port:
              number: 80

  - host: test.edinify.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-svc
            port:
              number: 80

      - path: /socket.io
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-svc
            port:
              number: 80
  
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-svc
            port:
              number: 80